require('dotenv').config() // get .env variables
import test from 'jest'
import { Nuxt, Builder } from 'nuxt'
import { resolve } from 'path'

//import axios from 'axios'
//const restTemplate = require('../components/mixins/rest-templates.js')
// doenst work import { restTemplates } from '../components/mixins/rest-templates.js'
// We keep a reference to Nuxt so we can close
// the server at the end of the test
let nuxt = null

test.before('Init Nuxt.js', async t => {
  console.log('Hi')
  const rootDir = resolve(__dirname, '..')

  let config = {}
  try { config = require(resolve(rootDir, 'nuxt.config.js')) } catch (e) {}

  config.rootDir = rootDir // project folder
  config.dev = false // production build
  config.mode = 'spa' // Isomorphic application

  console.log('Start docker-compose up before running this test')

  // console.log('config: ' + JSON.stringify(config))
  nuxt = new Nuxt(config)
  await new Builder(nuxt).build()

  nuxt.listen(4000, 'localhost')
})


test('Environment Variables', async t => {
  console.log('###########')
  console.log("/environment variables")
  console.log('###########')

  t.not(process.env.DW_USER, undefined)
  t.not(process.env.DW_AUTH_TOKEN, undefined)
  t.not(process.env.DW_DRAIN_URL, undefined)
  t.not(process.env.GOOGLE_MAPS_API_KEY, undefined)
  console.log('ev.ok')
})


// Close the Nuxt server
test.after('Closing server', t => {
  nuxt.close()
})

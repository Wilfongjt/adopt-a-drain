# TODO aad-web: Activate webservice in docker-compose.yml

version: '3'
# AAD
# docker-compose up
# ref: http://postgrest.org/en/v6.0/install.html#docker
# ref: https://github.com/mattddowney/compose-postgrest/blob/master/docker-compose.yml
services:
  web:
    #container_name: adopt-a-drain
    image: wilfongjt/adopt-a-drain
    build:
      context: ./aad-web/
    command: >
      bash -c "npm install && npm run dev"
    volumes:
      - ./aad-web:/usr/src
    ports:
      - "3000:3000"

  #############
  # POSTGRES
  #########
  db:
    #build: ./mockups/postgres-jwt-db
    #build: ./pg-database
    #build: ./aad-db/pg-database
    build:
        context: ./aad-db
        dockerfile: dockerfile-db
    ports:
      - "5433:5432"
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_JWT_SECRET=${POSTGRES_JWT_SECRET}
      - LB_GUEST_PASSWORD=${LB_GUEST_PASSWORD}
      - LB_WODEN=${LB_WODEN}
      #- POSTGRES_USER=postgres
      #- POSTGRES_PASSWORD=mysecretpassword
      #- POSTGRES_DB=aad_db
      #- DB_ANON_ROLE=guest
      #- DB_SCHEMA=aad_schema
      #- DB_NAME=postgres
      #- DB_USER=postgres
      #- DB_PASS=PASSWORD.must.BE.AT.LEAST.32.CHARS.LONG

    volumes:
      # anything in initdb directory is created in the database
      - "./aad-db/sql:/docker-entrypoint-initdb.d"

      # Uncomment this if you want to persist the data.
      - "~/.data/aad_db/pgdata:/var/lib/postgresql/data"
    networks:
      - postgrest-backend
    restart: always

  ##########
  # POSTGRREST
  #####
  api:

    image: postgrest/postgrest:latest

    ports:
      - "3100:3000"

    environment:
      # The standard connection URI format, documented at
      # https://www.postgresql.org/docs/current/static/libpq-connect.html#LIBPQ-CONNSTRING
      #PGRST_DB_URI: postgres://postgres:mysecretpassword@db:5432/aad_db
      #PGRST_DB_SCHEMA: aad_schema
      #PGRST_DB_ANON_ROLE: guest
    - PGRST_DB_URI=postgres://authenticator:${LB_GUEST_PASSWORD}@db:5432/${POSTGRES_DB}
    - PGRST_DB_SCHEMA=${PGRST_DB_SCHEMA}
    - PGRST_DB_ANON_ROLE=${PGRST_DB_ANON_ROLE}
    - PGRST_JWT_SECRET=${POSTGRES_JWT_SECRET}

    depends_on:
      - db
    links:
      - db:db

    networks:
      - postgrest-backend
    restart: always
networks:
  postgrest-backend:
    driver: bridge

# AAD
